{
  "sksl": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 resolution;\nuniform vec4 iMouse;\nuniform shader image;\nuniform half2 image_size;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvoid FLT_main()\n{\n    vec2 fragCoord = FLT_flutter_local_FlutterFragCoord();\n    float aspect = resolution.x / resolution.y;\n    vec2 uv = (fragCoord * vec2(aspect, 1.0)) / resolution;\n    vec2 mouse = (iMouse.xy * vec2(aspect, 1.0)) / resolution;\n    vec2 mouseDir = normalize(abs(iMouse.zw) - iMouse.xy);\n    vec2 origin = clamp(mouse - ((mouseDir * mouse.x) / vec2(mouseDir.x)), vec2(0.0), vec2(1.0));\n    float mouseDist = clamp(length(mouse - origin) + ((aspect - ((abs(iMouse.z) / resolution.x) * aspect)) / mouseDir.x), 0.0, aspect / mouseDir.x);\n    if (mouseDir.x < 0.0)\n    {\n        mouseDist = distance(mouse, origin);\n    }\n    float proj = dot(uv - origin, mouseDir);\n    float dist = proj - mouseDist;\n    vec2 linePoint = uv - (mouseDir * dist);\n    if (dist > 0.0500000007450580596923828125)\n    {\n        fragColor = vec4(0.0);\n        vec4 _143 = fragColor;\n        vec3 _145 = _143.xyz * pow(clamp(dist - 0.0500000007450580596923828125, 0.0, 1.0) * 1.5, 0.20000000298023223876953125);\n        fragColor.x = _145.x;\n        fragColor.y = _145.y;\n        fragColor.z = _145.z;\n    }\n    else\n    {\n        if (dist >= 0.0)\n        {\n            float theta = asin(dist / 0.0500000007450580596923828125);\n            vec2 p2 = linePoint + ((mouseDir * (3.1415927410125732421875 - theta)) * 0.0500000007450580596923828125);\n            vec2 p1 = linePoint + ((mouseDir * theta) * 0.0500000007450580596923828125);\n            bool _181 = p2.x <= aspect;\n            bool _187;\n            if (_181)\n            {\n                _187 = p2.y <= 1.0;\n            }\n            else\n            {\n                _187 = _181;\n            }\n            bool _193;\n            if (_187)\n            {\n                _193 = p2.x > 0.0;\n            }\n            else\n            {\n                _193 = _187;\n            }\n            bool _199;\n            if (_193)\n            {\n                _199 = p2.y > 0.0;\n            }\n            else\n            {\n                _199 = _193;\n            }\n            if (_199)\n            {\n                uv = p2;\n                fragColor = image.eval(image_size *  uv * vec2(1.0 / aspect, 1.0));\n                vec4 _219 = fragColor;\n                vec3 _221 = _219.xyz * pow(clamp((0.0500000007450580596923828125 - dist) / 0.0500000007450580596923828125, 0.0, 1.0), 0.20000000298023223876953125);\n                fragColor.x = _221.x;\n                fragColor.y = _221.y;\n                fragColor.z = _221.z;\n            }\n            else\n            {\n                uv = p1;\n                fragColor = image.eval(image_size *  uv * vec2(1.0 / aspect, 1.0));\n                vec4 _242 = fragColor;\n                vec3 _244 = _242.xyz * pow(clamp((0.0500000007450580596923828125 - dist) / 0.0500000007450580596923828125, 0.0, 1.0), 0.20000000298023223876953125);\n                fragColor.x = _244.x;\n                fragColor.y = _244.y;\n                fragColor.z = _244.z;\n            }\n        }\n        else\n        {\n            vec2 p = linePoint + (mouseDir * (abs(dist) + 0.157079637050628662109375));\n            bool _264 = p.x <= aspect;\n            bool _270;\n            if (_264)\n            {\n                _270 = p.y <= 1.0;\n            }\n            else\n            {\n                _270 = _264;\n            }\n            bool _276;\n            if (_270)\n            {\n                _276 = p.x > 0.0;\n            }\n            else\n            {\n                _276 = _270;\n            }\n            bool _282;\n            if (_276)\n            {\n                _282 = p.y > 0.0;\n            }\n            else\n            {\n                _282 = _276;\n            }\n            if (_282)\n            {\n                uv = p;\n                fragColor = image.eval(image_size *  uv * vec2(1.0 / aspect, 1.0));\n            }\n            else\n            {\n                bool _299 = p.x <= (aspect + 0.0199999995529651641845703125);\n                bool _306;\n                if (_299)\n                {\n                    _306 = p.y <= 1.019999980926513671875;\n                }\n                else\n                {\n                    _306 = _299;\n                }\n                bool _319;\n                if (_306)\n                {\n                    bool _312 = p.x > (-0.0199999995529651641845703125);\n                    bool _318;\n                    if (_312)\n                    {\n                        _318 = p.y > (-0.0199999995529651641845703125);\n                    }\n                    else\n                    {\n                        _318 = _312;\n                    }\n                    _319 = _318;\n                }\n                else\n                {\n                    _319 = _306;\n                }\n                if (_319)\n                {\n                    vec3 col = image.eval(image_size *  uv * vec2(1.0 / aspect, 1.0)).xyz;\n                    fragColor = vec4(col * 0.84375, 1.0);\n                }\n                else\n                {\n                    fragColor = image.eval(image_size *  uv * vec2(1.0 / aspect, 1.0));\n                }\n            }\n        }\n    }\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
  "stage": 1,
  "target_platform": 2,
  "uniforms": [
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 0,
      "name": "resolution",
      "rows": 2,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 1,
      "name": "iMouse",
      "rows": 4,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 0,
      "columns": 1,
      "location": 2,
      "name": "image",
      "rows": 1,
      "type": 12
    }
  ]
}